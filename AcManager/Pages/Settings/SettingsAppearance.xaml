<UserControl x:Class="AcManager.Pages.Settings.SettingsAppearance" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:set="clr-namespace:AcManager.Pages.Settings"
    xmlns:mui="http://firstfloorsoftware.com/ModernUI" xmlns:g="clr-namespace:AcManager" xmlns:c="http://acstuff.ru/app/controls" mc:Ignorable="d"
    FocusVisualStyle="{x:Null}" d:DataContext="{d:DesignInstance set:SettingsAppearance+ViewModel}" Loaded="OnLoaded">
  <UserControl.Resources>
    <mui:SharedResourceDictionary Source="/AcManager.Controls;component/Assets/SettingsSpecific.xaml" />
  </UserControl.Resources>
  <ScrollViewer mui:SaveScroll.Key="SettingsAppearance">
    <mui:SpacingUniformGrid x:Name="Grid" Columns="1" HorizontalSpacing="20" VerticalStackMode="True">

      <StackPanel set:Search.Keywords="appearance;ui" set:Search.Category="{x:Static g:AppStrings.Settings_Appearance}" x:Name="Panel"
          Style="{StaticResource SettingsPanel}">
        <ListBox set:Search.LinkedTo="{Binding ElementName=AccentColorPicker}" ItemsSource="{Binding AppAppearanceManager.AccentColors}"
            SelectedItem="{Binding AppAppearanceManager.AccentColor, Mode=TwoWay}" Margin="0 0 0 16">
          <ListBox.ItemsPanel>
            <ItemsPanelTemplate>
              <WrapPanel MaxWidth="{Binding ActualWidth, ElementName=Panel}" />
            </ItemsPanelTemplate>
          </ListBox.ItemsPanel>
          <ListBox.ItemTemplate>
            <DataTemplate>
              <Rectangle Width="40" Height="40" Margin="2">
                <Rectangle.Fill>
                  <SolidColorBrush x:Name="Brush" Color="{Binding}" />
                </Rectangle.Fill>
              </Rectangle>
            </DataTemplate>
          </ListBox.ItemTemplate>
        </ListBox>

        <DockPanel x:Name="AccentColorPicker" set:Search.Keywords="accent;theme;color">
          <Label Content="{x:Static g:AppStrings.Common_ColorLabel}" />
          <mui:ColorPicker DataContext="{x:Static c:AppAppearanceManager.Instance}" Color="{Binding AccentColor}" DisplayColor="{Binding AccentDisplayColor}" />
        </DockPanel>

        <DockPanel mui:LimitedService.Limited="True" set:Search.Keywords="accent;theme">
          <Label Content="{x:Static g:AppStrings.Settings_Appearance_ThemeLabel}" />
          <mui:HierarchicalComboBox ItemsSource="{Binding AppAppearanceManager.Themes}"
              SelectedItem="{Binding AppAppearanceManager.SelectedTheme, Mode=TwoWay}" />
        </DockPanel>
        <c:PropertiesGrid Margin="156 0 0 0" Columns="1" LabelPadding="0 0 0 4" set:Search.Include="False">
          <mui:BbCodeBlock c:PropertiesGrid.Label="Author:" DataContext="{DynamicResource Author}" Text="{Binding}" Margin="0 0 0 4"
              Visibility="{Binding Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=inverse}" />
          <mui:BbCodeBlock c:PropertiesGrid.Label="Description:" DataContext="{DynamicResource Description}" Text="{Binding}" Margin="0 0 0 4"
              Visibility="{Binding Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=inverse}" />
          <mui:BbCodeBlock c:PropertiesGrid.Label="Version:" DataContext="{DynamicResource Version}" Text="{Binding}" Margin="0 0 0 4"
              Visibility="{Binding Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=inverse}" />
        </c:PropertiesGrid>
        <mui:BetterTextBox Text="{Binding AppAppearanceManager.ThemeError, Mode=OneWay}" Margin="156 0 0 8" FontWeight="Bold" set:Search.Include="False"
            Foreground="{DynamicResource Error}" TextWrapping="Wrap" Style="{StaticResource Borderless}" IsReadOnly="True"
            Visibility="{Binding AppAppearanceManager.ThemeError, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=inverse}" />

        <CheckBox IsChecked="{Binding AppAppearanceManager.SmallFont}" set:Search.Keywords="font;text">
          <Label Content="{x:Static g:AppStrings.Settings_Appearance_SmallFont}" />
        </CheckBox>

        <DockPanel>
          <mui:ValueLabel Value="{Binding AppScale, Source={x:Static mui:AppearanceManager.Instance}, Converter={StaticResource PercentageConverter}}"
              mui:BetterTextBox.Minimum="0.1" Content="UI scale" Postfix="%" />
          <mui:FormattedSlider x:Name="ScaleSlider" Minimum="0.5" Maximum="2" TickFrequency="0.25" TickPlacement="BottomRight" IsMoveToPointEnabled="False"
              AutoToolTipFormat="{}{0:F0}%" AutoToolTipPlacement="BottomRight" IsSnapToTickEnabled="False"
              AutoToolTipConverter="{StaticResource PercentageConverter}" LargeChange="0.1" SmallChange="0.1"
              Value="{Binding AppScale, Source={x:Static mui:AppearanceManager.Instance}, Converter={StaticResource SliderRoundConverter},
                  ConverterParameter=0.01, UpdateSourceTrigger=LostFocus}" />
        </DockPanel>

        <DockPanel set:Search.Keywords="font;text">
          <Label Content="{x:Static g:AppStrings.Settings_Appearance_TextRenderingLabel}" />
          <ComboBox ItemsSource="{Binding TextFormattings}" SelectedItem="{Binding TextFormatting, Mode=TwoWay}" DisplayMemberPath="DisplayName" />
        </DockPanel>

        <DockPanel ToolTip="{x:Static g:AppStrings.Settings_Appearance_ImageScaling_Tooltip}">
          <Label Content="{x:Static g:AppStrings.Settings_Appearance_ImageScalingLabel}" />
          <Button Visibility="{Binding BitmapScalingRestartRequired, Converter={StaticResource BooleanToVisibilityConverter}}"
              Command="{Binding RestartCommand}" Content="{x:Static g:AppStrings.Common_Restart}" />
          <ComboBox ItemsSource="{Binding BitmapScalings}" SelectedItem="{Binding BitmapScaling, Mode=TwoWay}" DisplayMemberPath="DisplayName" />
        </DockPanel>

        <CheckBox IsChecked="{Binding AppAppearanceManager.PopupToolBars}" ToolTip="{x:Static g:AppStrings.Settings_Appearance_PopupToolbars_Tooltip}">
          <Label Content="{x:Static g:AppStrings.Settings_Appearance_PopupToolbars}" />
        </CheckBox>

        <CheckBox set:Search.Keywords="font" IsChecked="{Binding AppAppearanceManager.LargeSubMenuFont}"
            ToolTip="{x:Static g:AppStrings.Settings_Appearance_LargeSearchBoxes_Tooltip}">
          <Label Content="{x:Static g:AppStrings.Settings_Appearance_LargeSearchBoxes}" />
        </CheckBox>

        <CheckBox IsChecked="{Binding AppearanceManager.PixelScrollBars}" mui:NewMarkService.New="True">
          <Label Content="Narrow scrollbars" />
        </CheckBox>

        <CheckBox IsChecked="{Binding AppearanceManager.PopupScrollBars}"
            IsEnabled="{Binding AppearanceManager.PixelScrollBars, Converter={StaticResource InvertBooleanConverter}}">
          <Label Content="Popup scrollbars" />
        </CheckBox>

        <CheckBox IsChecked="{Binding AppAppearanceManager.ShowSubMenuDraggableIcons}" ToolTip="With this option disabled, you can drag them by close button">
          <Label Content="Show draggable areas next to search boxes" />
        </CheckBox>

        <DockPanel>
          <Label Content="{x:Static g:AppStrings.Settings_Appearance_TransitionAnimationLabel}" />
          <ComboBox ItemsSource="{Binding AppAppearanceManager.FrameAnimations}" SelectedItem="{Binding AppAppearanceManager.FrameAnimation, Mode=TwoWay}"
              DisplayMemberPath="DisplayName" />
        </DockPanel>

        <TextBlock Style="{StaticResource SettingsPanel.Heading2}" Text="Title links and menu:" />

        <CheckBox IsChecked="{Binding AppAppearanceManager.DownloadsInSeparatePage, Converter={StaticResource InvertBooleanConverter}}"
            mui:NewMarkService.New="True">
          <Label Content="Show downloads &amp; installations list in that menu in the upper right corner" />
        </CheckBox>

        <CheckBox IsChecked="{Binding AppAppearanceManager.DownloadsPageAutoOpen}" IsEnabled="{Binding AppAppearanceManager.DownloadsInSeparatePage}"
            mui:NewMarkService.New="True">
          <Label Content="Automatically navigate to downloads page when new download is started" />
        </CheckBox>

        <CheckBox IsChecked="{Binding AppAppearanceManager.LargerTitleLinks}" set:Search.Keywords="font;text">
          <Label Content="Larger font" />
        </CheckBox>

        <CheckBox IsChecked="{Binding AppAppearanceManager.BoldTitleLinks}" set:Search.Keywords="font;text">
          <Label Content="Bold font" />
        </CheckBox>

        <DockPanel>
          <Label Content="Links:" />
          <ListBox ItemsSource="{Binding AppAppearanceManager.TitleLinkEntries}" Style="{StaticResource VirtualizingListBox}" DisplayMemberPath="DisplayName"
              VirtualizingPanel.IsContainerVirtualizable="False" mui:ListBoxHelper.ProperMultiSelectionMode="True">
            <ListBox.ItemContainerStyle>
              <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource CheckBoxListBoxItem}"
                  d:DataContext="{d:DesignInstance c:TitleLinkEnabledEntry}">
                <Setter Property="IsSelected" Value="{Binding IsEnabled, Mode=TwoWay}" />
                <Setter Property="Visibility" Value="{Binding IsAvailable, Converter={StaticResource BooleanToVisibilityConverter}}" />
              </Style>
            </ListBox.ItemContainerStyle>
          </ListBox>
        </DockPanel>

        <c:MessageBlock>
          <mui:BbCodeBlock Text="You can access disabled links via that menu next to window’s buttons, or via hotkeys." />
        </c:MessageBlock>

      </StackPanel>
      <StackPanel set:Search.Keywords="appearance;ui" set:Search.Category="{x:Static g:AppStrings.Settings_Appearance}" Style="{StaticResource SettingsPanel}">

        <!-- Background -->
        <TextBlock Style="{StaticResource SettingsPanel.Heading2.First}" Text="Background:" />

        <CheckBox IsChecked="{Binding FancyBackgroundManager.Enabled}" ToolTip="Extra fancy">
          <Label Content="{x:Static g:AppStrings.Settings_Appearance_DynamicBackground}" />
        </CheckBox>

        <DockPanel IsEnabled="{Binding FancyBackgroundManager.Enabled, Converter={StaticResource InvertBooleanConverter}}">
          <Label Content="Background:" />
          <Button Command="{Binding ResetBackgroundImageCommand}" Content="Reset"
              Visibility="{Binding AppAppearanceManager.BackgroundFilename, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=inverse}" />
          <Button Command="{Binding ChangeBackgroundImageCommand}" Content="Change" />
          <mui:PathTrimmingTextBlock Text="{Binding AppAppearanceManager.BackgroundFilename}" Placeholder="Theme-defined" />
        </DockPanel>

        <DockPanel>
          <DockPanel.IsEnabled>
            <MultiBinding Converter="{StaticResource AndConverter}">
              <Binding Path="AppAppearanceManager.BackgroundFilename" Converter="{StaticResource NullToBooleanConverter}" ConverterParameter="inverse" />
              <Binding Path="FancyBackgroundManager.Enabled" Converter="{StaticResource InvertBooleanConverter}" />
            </MultiBinding>
          </DockPanel.IsEnabled>
          <mui:ValueLabel Value="{Binding AppAppearanceManager.BackgroundOpacity, Converter={StaticResource PercentageConverter}}"
              mui:BetterTextBox.Minimum="0" mui:BetterTextBox.Maximum="1" Content="Opacity" Postfix="%" />
          <Slider Minimum="0" Maximum="1" TickFrequency="0.1" TickPlacement="BottomRight"
              Value="{Binding AppAppearanceManager.BackgroundOpacity, Converter={StaticResource SliderRoundConverter}, ConverterParameter=0.01}" />
        </DockPanel>

        <DockPanel>
          <DockPanel.IsEnabled>
            <MultiBinding Converter="{StaticResource AndConverter}">
              <Binding Path="AppAppearanceManager.BackgroundFilename" Converter="{StaticResource NullToBooleanConverter}" ConverterParameter="inverse" />
              <Binding Path="FancyBackgroundManager.Enabled" Converter="{StaticResource InvertBooleanConverter}" />
            </MultiBinding>
          </DockPanel.IsEnabled>
          <Label Content="Placement:" />
          <ComboBox ItemsSource="{Binding AppAppearanceManager.StretchModes}" SelectedItem="{Binding AppAppearanceManager.BackgroundStretchMode, Mode=TwoWay}"
              DisplayMemberPath="DisplayName" />
        </DockPanel>

        <!-- Interface -->
        <TextBlock Style="{StaticResource SettingsPanel.Heading2}" Text="Interface:" />

        <CheckBox IsChecked="{Binding AppearanceManager.ManageWindowsLocation, Converter={StaticResource InvertBooleanConverter}}">
          <CheckBox.ToolTip>
            <mui:BbCodeBlock Text="Use it in case CM fails to position windows correctly. 😔[br][br]I’m still trying to find a solution to this problem." />
          </CheckBox.ToolTip>
          <Label Content="Do not interfere with windows’ location and size" Foreground="{DynamicResource Error}" />
        </CheckBox>

        <StackPanel Visibility="{Binding AppearanceManager.ManageWindowsLocation, Converter={StaticResource BooleanToVisibilityConverter}}">
          <DockPanel ToolTip="{x:Static g:AppStrings.Settings_Appearance_ImageScaling_Tooltip}">
            <Label Content="Bind to screen:" />
            <mui:BbCodeBlock Text="Changes won’t affect already shown windows." DockPanel.Dock="Bottom" Style="{StaticResource BbCodeBlock.Small}"
                Margin="0 2 0 0" />
            <mui:BetterComboBox ItemsSource="{Binding Screens}" SelectedItem="{Binding ForceScreen, Mode=TwoWay}" Nullable="True" IsEditable="False">
              <mui:BetterComboBox.ItemTemplate>
                <DataTemplate>
                  <TextBlock x:Name="PART_DisplayName" Text="{Binding DisplayName}" />
                  <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding}" Value="{x:Static mui:BetterComboBox.NullValue}">
                      <Setter TargetName="PART_DisplayName" Property="Text" Value="None" />
                    </DataTrigger>
                  </DataTemplate.Triggers>
                </DataTemplate>
              </mui:BetterComboBox.ItemTemplate>
            </mui:BetterComboBox>
          </DockPanel>

          <CheckBox IsChecked="{Binding AppearanceManager.KeepWithinSingleScreen}"
              IsEnabled="{Binding ForceScreen, Converter={StaticResource NullToBooleanConverter}}">
            <Label Content="Open new windows on the same screen as the first one despite saved location" />
          </CheckBox>

          <CheckBox IsChecked="{Binding AppearanceManager.PreferFullscreenMode}">
            <Label Content="Force fullscreen mode" />
          </CheckBox>

          <CheckBox IsChecked="{Binding AppearanceManager.FullscreenOverTaskbarMode}">
            <Label Content="Fullscreen over taskbar" />
          </CheckBox>
        </StackPanel>

        <CheckBox IsChecked="{Binding AppAppearanceManager.ShowMainWindowBackButton}">
          <Label Content="Show back button in the main window" />
        </CheckBox>

        <CheckBox IsChecked="{Binding AppearanceManager.ForceMenuAtTopInFullscreenMode}">
          <Label Content="Stick main menu at the top in fullscreen mode" />
        </CheckBox>

        <CheckBox IsChecked="{Binding AppAppearanceManager.SemiTransparentAttachedTools}" set:Search.Keywords="custom showroom">
          <Label Content="Semi-transparent tools in Custom Showroom and DirectX-specific tools" />
        </CheckBox>

        <CheckBox IsChecked="{Binding AppAppearanceManager.ShowSubMenuDraggableIcons}" ToolTip="With this option disabled, you can drag them by close button">
          <Label Content="Show draggable areas next to search boxes" />
        </CheckBox>

        <CheckBox IsChecked="{Binding Interface.QuickDriveFastAccessButtons}">
          <Label Content="Fast-access buttons over car and track in Quick Drive" />
        </CheckBox>

        <CheckBox IsChecked="{Binding Interface.SkinsSetupsNewWindow}"
            ToolTip="If disabled, hold Ctrl while opening skins or setups to open them in a new window anyway">
          <Label Content="Open skins and setups lists in new window" />
        </CheckBox>

        <!-- Image viewer -->
        <TextBlock Style="{StaticResource SettingsPanel.Heading2}" Text="Image viewer:" />

        <CheckBox IsChecked="{Binding Value, Source={x:Static c:BlurredPiece.IsActive}}" set:Search.Keywords="images;viewers;image viewer">
          <Label Content="Blur buttons’ background (might decrease performance)" />
        </CheckBox>

        <CheckBox IsChecked="{Binding AppAppearanceManager.BlurImageViewerBackground}" set:Search.Keywords="images;viewers;image viewer"
            ToolTip="Works only on Windows 7 or Windows 10">
          <Label Content="Blur Image Viewer’s background" />
        </CheckBox>

        <CheckBox IsChecked="{Binding AppAppearanceManager.HideImageViewerButtons}" set:Search.Keywords="images;viewers;image viewer">
          <Label Content="Hide buttons in Image Viewer’s unless there is a mouse pointer on top" />
        </CheckBox>

        <!-- System -->
        <TextBlock Style="{StaticResource SettingsPanel.Heading2}" Text="System:" />

        <DockPanel ToolTip="{x:Static g:AppStrings.Settings_Appearance_ImageScaling_Tooltip}">
          <Button Visibility="{Binding SoftwareRenderingRestartRequired, Converter={StaticResource BooleanToVisibilityConverter}}"
              Command="{Binding RestartCommand}" Content="{x:Static g:AppStrings.Common_Restart}" Margin="0 -2" />
          <CheckBox IsChecked="{Binding SoftwareRendering}">
            <Label Content="Disable hardware acceleration for UI (not recommended)" TextBlock.Foreground="{DynamicResource Error}" />
          </CheckBox>
        </DockPanel>
      </StackPanel>

    </mui:SpacingUniformGrid>
  </ScrollViewer>
</UserControl>